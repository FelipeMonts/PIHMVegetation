whc <- thick * i$awc_r # compute water storage by horizon
whc.total <- sum(whc, na.rm=TRUE) # sum to get profile water storage
data.frame(whc=whc.total, wt=wt) # return profile water storage and component pct
}
# function for computing weighted-mean whc within a map unit
mu.mean.whc <- function(i) {
whc <- wtd.mean(i$whc, weights=i$wt) # safely compute wt. mean water storage
data.frame(whc=whc) # return wt. mean water storage
}
# load libraries
library(Hmisc)
library(soilDB)
library(plyr)
library(raster)
library(aqp)
library(sp)
library(rgdal)
library(raster)
library(rgeos)
library(lattice)
library(MASS)
# load chunk of gSSURGO
data(gSSURGO.chunk, package='soilDB')
# convert into a raster + RAT
gSSURGO.chunk <- ratify(gSSURGO.chunk, count=TRUE)
# save RAT to new object, will use later
rat <- levels(gSSURGO.chunk)[[1]]
# extract the map unit keys from the RAT, and format for use in an SQL IN-statement
in.statement <- format_SQL_in_statement(rat$ID)
# format query in SQL- raw data are returned
q <- paste("SELECT component.mukey, component.cokey, compname, comppct_r, hzdept_r, hzdepb_r, hzname, awc_r
FROM component JOIN chorizon ON component.cokey = chorizon.cokey
AND mukey IN ", in.statement, "ORDER BY mukey, comppct_r DESC, hzdept_r ASC", sep="")
# now get component and horizon-level data for these map unit keys
res <- SDA_query(q)
head(res)
q2 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res2 <- SDA_query(q2)
head(res2,20)
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
in.statement2 <- format_SQL_in_statement(rat$ID)
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res3 <- SDA_query(q3);
head(res2) ;
res3$id<-res3$mukey ;
res3$top<-res3$hzdept_r ;
res3$bottom<-res3$hzdepb_r ;
res3$name<-res3$hzname ;
depths(res3)<-id ~ top + bottom  ;
str(res3) ;
plot(res3, name='name')
plot(res3, name='name', color='om_r')
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res3 <- SDA_query(q3);
head(res2) ;
res3$id<-res3$mukey ;
res3$top<-res3$hzdept_r ;
res3$bottom<-res3$hzdepb_r ;
res3$name<-res3$hzname ;
depths(res3)<-id ~ top + bottom  ;
str(res3) ;
plot(res3, name='name', color='dbtenthbar_r')
plot(res3, name='name', color='claytotal_r')
head(res3) ;
plot(res3, name='name', color='dbthirdbar_r')
plot(res3[1:10], name='name', color='dbthirdbar_r')
res3[1]
res3[1:3]
print(res3[1])
print(res3[1:3])
head[res3]
plot(res3[1:3], name='name', color='dbthirdbar_r')
q3 <- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r, fraggt10_r, frag3to10_r, sieveno10_r, sieveno40_r, sieveno200_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
res3 <- SDA_query(q3);
head(res3) ;
res3$id<-res3$mukey ;
res3$top<-res3$hzdept_r ;
res3$bottom<-res3$hzdepb_r ;
res3$name<-res3$hzname ;
depths(res3)<-id ~ top + bottom  ;
str(res3) ;
plot(res3[1:10], name='name', color='dbthirdbar_r')
plot(res3[1:10], name='name', color='frag3to10_r')
install.packages("dplyr")
.libPaths("C:/Felipe/Sotware&Coding/R_Library/library")  ;
install.packages("dplyr")
# load libraries
library(Hmisc) ;
library(soilDB) ;
library(plyr) ;
library(raster) ;
library(aqp) ;
library(sp) ;
library(rgdal) ;
library(raster) ;
library(rgeos) ;
library(lattice) ;
library(MASS) ;
library(RColorBrewer) ;
library(ggplot2)  ;
#library(tmap) ;
library(dplyr)  ;
library(tidyr)  ;
library(devtools) ;
sessionInfo()
########################## import the raster file with the GSSURGO Data for the watershed in PIHM ####################
Manhatango_GSSURGO<- raster('C:\\Felipe\\PIHM-CYCLES\\PIHM\\PIHM_Felipe\\CNS\\Manhantango\\gssurgo_g_pa\\GSSURGO_PA_TIFF\\MahatangoGSSG1.tif') ;
# generate a RAT via raster package functionality
Manhatango_GSSURGO <- ratify(Manhatango_GSSURGO) ;
# extract RAT to a data.frame
MUKEYS <- levels(Manhatango_GSSURGO)[[1]] ;
################################ Query the Soil Data access database with SQL through R #################
# from https://sdmdataaccess.sc.egov.usda.gov/queryhelp.aspx
# and https://sdmdataaccess.sc.egov.usda.gov/documents/ReturningSoilTextureRelatedAttributes.pdf
# --Sample query begins.
# --Note that a pair of dashes denotes the beginning of a comment.
# SELECT
# saversion, saverest, -- attributes from table "sacatalog"
# l.areasymbol, l.areaname, l.lkey, -- attributes from table "legend"
# musym, muname, museq, mu.mukey, -- attributes from table "mapunit"
# comppct_r, compname, localphase, slope_r, c.cokey, -- attributes from table "component"
# hzdept_r, hzdepb_r, ch.chkey, -- attributes from table "chorizon"
# sandtotal_r, silttotal_r, claytotal_r, --total sand, silt and clay fractions from table "chorizon"
# sandvc_r, sandco_r, sandmed_r, sandfine_r, sandvf_r,--sand sub-fractions from table "chorizon"
# texdesc, texture, stratextsflag, chtgrp.rvindicator, -- attributes from table "chtexturegrp"
# texcl, lieutex, -- attributes from table "chtexture"
# texmod -- attributes from table "chtexturemod"
# FROM sacatalog sac
# INNER JOIN legend l ON l.areasymbol = sac.areasymbol AND l.areatypename = 'Non-MLRA Soil Survey Area'
# INNER JOIN mapunit mu ON mu.lkey = l.lkey
# AND mu.mukey IN
# ('107559','107646','107674','107682','107707','107794','107853','107854','107865','107867','107869','107870','107871')
# LEFT OUTER JOIN component c ON c.mukey = mu.mukey
# LEFT OUTER JOIN chorizon ch ON ch.cokey = c.cokey
# LEFT OUTER JOIN chtexturegrp chtgrp ON chtgrp.chkey = ch.chkey
# LEFT OUTER JOIN chtexture cht ON cht.chtgkey = chtgrp.chtgkey
# LEFT OUTER JOIN chtexturemod chtmod ON chtmod.chtkey = cht.chtkey
# --WHERE.
# --ORDER BY l.areaname, museq, comppct_r DESC, compname, hzdept_r -- standard soil report ordering
# --Sample query ends.
# extract the map unit keys from the RAT, and format for use in an SQL IN-statement
in.statement2 <- format_SQL_in_statement(MUKEYS$ID)
# format query in SQL- raw data are returned
Pedon.query<- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r,hzthk_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r, fraggt10_r, frag3to10_r, sieveno10_r, sieveno40_r, sieveno200_r, ksat_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
# now get component and horizon-level data for these map unit keys
Pedon.info<- SDA_query(Pedon.query);
head(Pedon.info) ;
# filter components that are the major components of each unit map with the Flag majcompflag=='Yes'
Pedon.info.MajorC<-Pedon.info[which(Pedon.info$majcompflag == 'Yes'),]  ;
head(Pedon.info.MajorC) ;
# check if there are mukeys with more than one dominant component
Pedon.info.MajorC$mukey.factor<-as.factor(Pedon.info.MajorC$mukey) ;
Pedon.info.MajorC$cokey.factor<-as.factor(Pedon.info.MajorC$cokey) ;
Pedon.info.MajorC$mukey_comppct_r<-paste(Pedon.info.MajorC$mukey.factor,Pedon.info.MajorC$comppct_r, sep = "_") ;
# Select major component mukeys that have also the highest component percent comppct_r
head(Pedon.info.MajorC)
Dominant<- aggregate(comppct_r ~ mukey.factor, data=Pedon.info.MajorC, FUN="max" , drop=T, simplify=T) ;
head(Dominant)
Dominant$mukey_comppct_r<-paste(Dominant$mukey.factor,Dominant$comppct_r, sep ="_");
Mukey.Pedon<-Pedon.info.MajorC[Pedon.info.MajorC$mukey_comppct_r %in% Dominant$mukey_comppct_r,]
data(sp4)
depths(sp4) <- id ~ top + bottom
slice(sp4, fm= 0:15 ~ sand + silt + clay + name + ex_Ca_to_Mg)
sessionInfo()
install.packages("aqp")
install.packages("aqp")
install.packages("aqp")
#################### Program to create the soils File in PIHM from Data in SSurgo and other resources##################
################# Felipe Montes ##########################
################# 2015 11 13 ############################
################# REvised 2017/09/29 ####################
###############################################################################################################
#                          Loading Packages and setting up working directory
###############################################################################################################
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/Sotware&Coding/R_Library/library")  ;
#  Set Working directory
setwd("C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/WE-38/WE38_Files_PIHM_Cycles20170208/SWATPIHMRcode") ;
########### Install packages  #####################
# install.packages('raster', dep=TRUE)
# install.packages('plyr', dep=TRUE)
# install.packages('Hmisc', dep=TRUE)
# install.packages('soilDB', dep=TRUE) # stable version from CRAN + dependencies
# install.packages("soilDB", repos="http://R-Forge.R-project.org") # most recent copy from r-forge
# install.packages("SSOAP", repos = "http://www.omegahat.org/R", type="source") # SSOAP and XMLSchema
# install.packages("foreign")
# install.packages("httr", dep=TRUE)
# install.packages("rgdal", dep = TRUE)
# install.packages("raster", dep = TRUE)
# install.packages("rgeos", dep = TRUE)
# install.packages("RColorBrewer")
# install.packages("latticeExtra")A
# install.packages("reshape")
# install.packages("dplyr")
# install.packages("aqp")
########### Call the library packages needed for the program to work #############
# load libraries
library(Hmisc) ;
library(plyr) ;
library(dplyr)  ;
library(soilDB) ;
library(raster) ;
library(aqp) ;
library(sp) ;
library(rgdal) ;
library(raster) ;
library(rgeos) ;
library(lattice) ;
library(MASS) ;
library(RColorBrewer) ;
library(ggplot2)  ;
#library(tmap) ;
library(tidyr)  ;
library(devtools) ;
library(stats)
# ########################## import the raster file with the GSSURGO Data for the watershed in PIHM ####################
#
#
# Manhatango_GSSURGO<- raster('C:\\Felipe\\PIHM-CYCLES\\PIHM\\PIHM_Felipe\\CNS\\Manhantango\\gssurgo_g_pa\\GSSURGO_PA_TIFF\\MahatangoGSSG1.tif') ;
#
# # generate a RAT via raster package functionality
# Manhatango_GSSURGO <- ratify(Manhatango_GSSURGO) ;
#
# # extract RAT to a data.frame
# MUKEYS <- levels(Manhatango_GSSURGO)[[1]] ;
#
# ##### The File above contains all the mukeys in the GSSURGO raster data enclosed by the Mahatango wateshed boundaries. This
# ##### includes all Map units in the map. In order to better select soil properties for PIHM smiulations, the mesh file generated by PIHM-GIS is supper inposed on the GGSURGO data and from each trinagle the best representation of soil mapunits is extracted and from that the soil infomration required by PIHM. PIHM-GIS extracts centroid information, that is the mapunit that is located at the centroid of each trinagle. This is done for easiness and clarity.
# ##### In this program we wil extract the map unit that is most frequent  (mode) in each trinagle based on GSSURGO raster pixel counts. This is expected to be more representative of the watershed conditions. To do that , the Zonal Statistics raster tool in GIS is used and the statistical mode for each triangle is selected.
#
###########################################################################################################################
#### import the shape files from QGIS with the MUKEY mode from each triangle ####
########### Read infromation about the shape files ###########
HansYoust.mesh.info<-ogrInfo("C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HY_GSURGO.shp");
#### read the shape file that has been created in QGIS using the zonal statistics
HansYoust.GSSURGO<-readOGR("C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HY_GSURGO.shp")  ;
str(HansYoust.GSSURGO) ;
plot(HansYoust.GSSURGO);
str(HansYoust.GSSURGO@data) ;
#### Extract the Mukeys corresponding to the mode in each mesh triangle
MUKEYS.mode<-as.factor(HansYoust.GSSURGO@data$SSURGO_mod) ;
MUKEYS<-levels(MUKEYS.mode)  ;
################################ Query the Soil Data access database with SQL through R #################
# from https://sdmdataaccess.sc.egov.usda.gov/queryhelp.aspx
# and https://sdmdataaccess.sc.egov.usda.gov/documents/ReturningSoilTextureRelatedAttributes.pdf
# --Sample query begins.
# --Note that a pair of dashes denotes the beginning of a comment.
# SELECT
# saversion, saverest, -- attributes from table "sacatalog"
# l.areasymbol, l.areaname, l.lkey, -- attributes from table "legend"
# musym, muname, museq, mu.mukey, -- attributes from table "mapunit"
# comppct_r, compname, localphase, slope_r, c.cokey, -- attributes from table "component"
# hzdept_r, hzdepb_r, ch.chkey, -- attributes from table "chorizon"
# sandtotal_r, silttotal_r, claytotal_r, --total sand, silt and clay fractions from table "chorizon"
# sandvc_r, sandco_r, sandmed_r, sandfine_r, sandvf_r,--sand sub-fractions from table "chorizon"
# texdesc, texture, stratextsflag, chtgrp.rvindicator, -- attributes from table "chtexturegrp"
# texcl, lieutex, -- attributes from table "chtexture"
# texmod -- attributes from table "chtexturemod"
# FROM sacatalog sac
# INNER JOIN legend l ON l.areasymbol = sac.areasymbol AND l.areatypename = 'Non-MLRA Soil Survey Area'
# INNER JOIN mapunit mu ON mu.lkey = l.lkey
# AND mu.mukey IN
# ('107559','107646','107674','107682','107707','107794','107853','107854','107865','107867','107869','107870','107871')
# LEFT OUTER JOIN component c ON c.mukey = mu.mukey
# LEFT OUTER JOIN chorizon ch ON ch.cokey = c.cokey
# LEFT OUTER JOIN chtexturegrp chtgrp ON chtgrp.chkey = ch.chkey
# LEFT OUTER JOIN chtexture cht ON cht.chtgkey = chtgrp.chtgkey
# LEFT OUTER JOIN chtexturemod chtmod ON chtmod.chtkey = cht.chtkey
# --WHERE.
# --ORDER BY l.areaname, museq, comppct_r DESC, compname, hzdept_r -- standard soil report ordering
# --Sample query ends.
# extract the map unit keys from the RAT, and format for use in an SQL IN-statement
#in.statement2 <- format_SQL_in_statement(MUKEYS$ID);
in.statement2 <- format_SQL_in_statement(MUKEYS);
# format query in SQL- raw data are returned
Pedon.query<- paste0("SELECT component.mukey, component.cokey, compname, comppct_r, majcompflag, slope_r, hzdept_r, hzdepb_r,hzthk_r, hzname, awc_r, sandtotal_r, silttotal_r, claytotal_r, om_r,dbtenthbar_r, dbthirdbar_r, dbfifteenbar_r, fraggt10_r, frag3to10_r, sieveno10_r, sieveno40_r, sieveno200_r, ksat_r  FROM component JOIN chorizon ON component.cokey = chorizon.cokey AND mukey IN ", in.statement2," ORDER BY mukey, comppct_r DESC, hzdept_r ASC") ;
Pedon.info<- SDA_query(Pedon.query);
head(Pedon.info) ;
str(Pedon.info)  ;
Pedon.info.MajorC<-Pedon.info[which(Pedon.info$majcompflag == 'Yes'),]  ;
head(Pedon.info.MajorC) ;
str(Pedon.info.MajorC)  ;
Pedon.info.MajorC$mukey.factor<-as.factor(Pedon.info.MajorC$mukey) ;
Pedon.info.MajorC$cokey.factor<-as.factor(Pedon.info.MajorC$cokey) ;
Pedon.info.MajorC$mukey_comppct_r<-paste(Pedon.info.MajorC$mukey.factor,Pedon.info.MajorC$comppct_r, sep = "_") ;
head(Pedon.info.MajorC)  ;
Dominant<- aggregate(comppct_r ~ mukey.factor, data=Pedon.info.MajorC, FUN="max" , drop=T, simplify=T) ;
head(Dominant)  ;
str(Dominant) ;
Dominant$mukey_comppct_r<-paste(Dominant$mukey.factor,Dominant$comppct_r, sep ="_");
Mukey.Pedon<-Pedon.info.MajorC[Pedon.info.MajorC$mukey_comppct_r %in% Dominant$mukey_comppct_r,]  ;
str(Mukey.Pedon) ;
Mukey.Pedon$mukey_ID<-as.character(Mukey.Pedon$mukey) ;
str(Mukey.Pedon);
depths(Mukey.Pedon)<-mukey_ID ~ hzdept_r + hzdepb_r  ;
str(Mukey.Pedon) ;
plot(Mukey.Pedon, name='hzname',color='dbthirdbar_r')  ;
Mukey.Pedon$soil.depth <-  profileApply(Mukey.Pedon, FUN=max) ;
Mukey.Pedon$hzthickns_r<-Mukey.Pedon$hzdepb_r-Mukey.Pedon$hzdept_r  ;
str(Mukey.Pedon) ;
Mukey.Pedon@horizons<-merge(Mukey.Pedon@horizons, Mukey.Pedon@site, by.x='mukey', by.y='mukey_ID') ;
str(Mukey.Pedon) ;
sliced<-aqp::slice(Mukey.Pedon, fm = 0:max(Mukey.Pedon) ~ sandtotal_r + silttotal_r + claytotal_r + om_r + dbthirdbar_r  + soil.depth + mukey.factor ) ;
plot(sliced, name='hzname', color='om_r') ;
str(sliced) ;
sliced@site$SOIL_MASS<- profileApply(sliced, FUN=function(x) sum(x$dbthirdbar_r, na.rm=T), simplify = T) ;
sliced@site$SANDMASS<- profileApply(sliced, FUN=function(x) sum((x$sandtotal_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$SILTMASS<- profileApply(sliced, FUN=function(x) sum((x$silttotal_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$CLAYMASS<- profileApply(sliced, FUN=function(x) sum((x$claytotal_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$OM_MASS<- profileApply(sliced, FUN=function(x) sum((x$om_r*x$dbthirdbar_r)/100, na.rm=T), simplify = T) ;
sliced@site$SAND<-(sliced@site$SANDMASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$SILT<-(sliced@site$SILTMASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$CLAY<-(sliced@site$CLAYMASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$TEXTURE_CHECK<-sliced@site$SAND + sliced@site$SILT + sliced@site$CLAY ;
sliced@site$OM<- (sliced@site$OM_MASS/sliced@site$SOIL_MAS)*100   ;
sliced@site$BULKD<-sliced@site$SOIL_MASS/sliced@site$soil.depth ;
head(sliced@site)
HansYoust_Soil<-sliced@site[, c("mukey_ID", "SILT", "CLAY" , "OM" , "BULKD")] ;
names(HansYoust_Soil)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
str(HansYoust_Soil) ;
Mukey.deepest<-Mukey.Pedon@horizons[Mukey.Pedon@horizons$hzdepb_r == Mukey.Pedon@horizons$soil.depth,]  ;
str(Mukey.deepest) ;
HansYoust_Geology<-Mukey.deepest [, c("mukey_ID", "silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] ;
names(HansYoust_Geology)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
Mukey.deepest.NA<-Mukey.deepst[is.na(Mukey.deepst$claytotal_r),'mukey_ID']  ;
Mukey.deepest.2<-Mukey.Pedon@horizons[Mukey.Pedon@horizons$mukey_ID %in% Mukey.deepest.NA , ];
Mukey.deepest_1<-Mukey.deepest.2[which(Mukey.deepest.2$hzdepb_r == Mukey.deepest.2$soil.depth)-1, c("mukey_ID", "silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] ;
names(Mukey.deepest_1)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
Mukey.deepest.NA<-Mukey.deepst[is.na(Mukey.deepest$claytotal_r),'mukey_ID']  ;
Mukey.deepest.NA<-Mukey.deepest[is.na(Mukey.deepest$claytotal_r),'mukey_ID']  ;
Mukey.deepest.2<-Mukey.Pedon@horizons[Mukey.Pedon@horizons$mukey_ID %in% Mukey.deepest.NA , ];
Mukey.deepest_1<-Mukey.deepest.2[which(Mukey.deepest.2$hzdepb_r == Mukey.deepest.2$soil.depth)-1, c("mukey_ID", "silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] ;
names(Mukey.deepest_1)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
HansYoust_Geology[HansYoust_Geology$MUKEY %in% Mukey.deepest.NA, ]<-Mukey.deepest_1  ;
str(HansYoust_Geology) ;
write.table(HansYoust_Soil,file="C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HansYoust_Soil.txt", row.names=F , quote=F, sep = "\t") ;
HansYoust_Geology
write.table(HansYoust_Geology,file="C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HansYoust_Geology.txt", row.names=F , quote=F, sep = "\t") ;
HansYoust_Soil
HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")]<-round(HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")], signif=8)
HansYoust_Soil<-sliced@site[, c("mukey_ID", "SILT", "CLAY" , "OM" , "BULKD")] ;
HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")]<-round(HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")], signif=8)
round(HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")], signif=8)
HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")]<-signif(HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")], signif=8)
HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")]<-signif(HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")], digits=8)
HansYoust_Soil
HansYoust_Soil<-sliced@site[, c("mukey_ID", "SILT", "CLAY" , "OM" , "BULKD")] ;
HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")]<-signif(HansYoust_Soil[,c("SILT", "CLAY" , "OM" , "BULKD")], digits=8)
names(HansYoust_Soil)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
str(HansYoust_Soil) ;
Mukey.deepest<-Mukey.Pedon@horizons[Mukey.Pedon@horizons$hzdepb_r == Mukey.Pedon@horizons$soil.depth,]  ;
str(Mukey.deepest) ;
HansYoust_Geology[, c("silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] <-signif(HansYoust_Geology[, c("silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")], digits=8)
HansYoust_Geology<-Mukey.deepest [, c("mukey_ID", "silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] ;
HansYoust_Geology[, c("silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] <-signif(HansYoust_Geology[, c("silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")], digits=8)
HansYoust_Geology
HansYoust_Geology
names(HansYoust_Geology)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
Mukey.deepest.NA<-Mukey.deepest[is.na(Mukey.deepest$claytotal_r),'mukey_ID']  ;
Mukey.deepest.2<-Mukey.Pedon@horizons[Mukey.Pedon@horizons$mukey_ID %in% Mukey.deepest.NA , ];
Mukey.deepest_1<-Mukey.deepest.2[which(Mukey.deepest.2$hzdepb_r == Mukey.deepest.2$soil.depth)-1, c("mukey_ID", "silttotal_r", "claytotal_r" , "om_r" , "dbthirdbar_r")] ;
names(Mukey.deepest_1)<-c('MUKEY','SILT',  'CLAY',	'OM',	'BD');
HansYoust_Geology[HansYoust_Geology$MUKEY %in% Mukey.deepest.NA, ]<-Mukey.deepest_1  ;
HansYoust_Geology[HansYoust_Geology$MUKEY %in% Mukey.deepest.NA, ]<-Mukey.deepest_1  ;
HansYoust_Geology
HansYoust_Geology[, c('MUKEY','SILT',  'CLAY',	'OM',	'BD')] <-signif(HansYoust_Geology[, c('MUKEY','SILT',  'CLAY',	'OM',	'BD')], digits=8)
HansYoust_Geology[, c('SILT',  'CLAY',	'OM',	'BD')] <-signif(HansYoust_Geology[, c('SILT',  'CLAY',	'OM',	'BD')], digits=8)
HansYoust_Geology
str(HansYoust_Geology) ;
write.table(HansYoust_Soil,file="C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HansYoust_Soil.txt", row.names=F , quote=F, sep = "\t") ;
write.table(HansYoust_Geology,file="C:/Felipe/PIHM-CYCLES/PIHM/PIHM_Felipe/CNS/Manhantango/HydroTerreFullManhantango/HansYostDeepCreek/GSSURGO/HansYoust_Geology.txt", row.names=F , quote=F, sep = "\t") ;
.libPaths("C:/Felipe/Sotware&Coding/R_Library/library")  ;
setwd("C:/Felipe/PIHM-CYCLES/PIHM/PIHM_R_Scripts/PIHMVegetation") ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T) ;
vegprmt.tbl
NUMLC<-read.table("./vegprmt.tbl", skip=0, sep="\t", as.is=T, nrows=1) ;
NUMLC
NUMLC
str( NUMLC)
NUMLC<-read.table("./vegprmt.tbl", skip=0, sep="\t", as.is=T, nrows=1) ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep=" ", as.is=T, nrows=NUMLC) ;
NUMLC<-read.table("./vegprmt.tbl", skip=0, sep=" ", as.is=T, nrows=1) ;
NUMLC
NUMLC<-read.table("./vegprmt.tbl", skip=0, sep="\t", as.is=T, nrows=1) ;
str( NUMLC)
NUMLC<-read.table("./vegprmt.tbl", skip=0, as.is=T, nrows=1) ;
str( NUMLC)
NUMLC<-read.table("./vegprmt.tbl", skip=0, as.is=T, nrows=1) ;
NUMLC
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, , header=T, nrows=NUMLC[2]) ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T, nrows=NUMLC[2]) ;
nrows=NUMLC[2]
NUMLC[2]
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T, nrows=NUMLC[2]) ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T) ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2]) ;
vegprmt.tbl
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2],comment.char = "") ;
vegprmt.tbl
str(vegprmt.tbl)
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2],comment.char = "") ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2]) ;
str(vegprmt.tbl)
vegprmt.tb$Description<-read.table("./vegprmt.tbl", skip=1, sep="#", as.is=T, header=T, nrows=NUMLC[1,2],comment.char="") ;
vegprmt.tbl$Description<-read.table("./vegprmt.tbl", skip=1, sep="#", as.is=T, header=T, nrows=NUMLC[1,2],comment.char="") ;
vegprmt.tbl$Description
str(vegprmt.tbl$Description)
vegprmt.tbl$Description<-read.table("./vegprmt.tbl", skip=1, sep="#", as.is=T, header=T, nrows=NUMLC[1,2],comment.char="") ;
vegprmt.tbl$Description
vegprmt.tbl$Description<-read.table("./vegprmt.tbl", skip=1, sep="\#", as.is=T, header=T, nrows=NUMLC[1,2],comment.char="") ;
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2]) ;
vegprmt.tbl$Description<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2],comment.char="#") ;
vegprmt.tbl$Description
Description<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2],comment.char="", check.names = "" ) ;
Description<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=F, nrows=NUMLC[1,2],comment.char="", check.names = "" ) ;
Description<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, nrows=NUMLC[1,2],comment.char="", check.names = "" ) ;
Description<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2], comment.char="") ;
Description<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2], comment.char="") ;
Description
str(Description)
Description<-read.table("./vegprmt.tbl", skip=2, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2], comment.char="") ;
str(Description)
strsplit(Description, split = "#")
strsplit(Description, split = "\#")
[:punct:]
grep("[[:punct:]]", levels(gDat$country), value = TRUE)
strsplit(Description, split = "[[:punct:]]")
strsplit(Description[1], "[[:punct:]]")
[[:digit:]]
> l=c(”apple”,”banana”,”grape”,”10”,”green.pepper”)
> grep(“a”,l)
[1] 1 2 3
> grep(“a”,l,value=TRUE)
[1] “apple” “banana” “grape”
> grep(“[[:digit:]]”,l,value=TRUE)
[1] “10”
> grep(“.”,l)
[1] 1 2 3 4 5
> grep(“.”,l,fixed=TRUE
Description[1]
Description[1,1]
strsplit(Description[1,1],"[[:punct:]]")
strsplit(Description[1,1],"[[:punct:]]", "#")
strsplit(Description[1,1], "#")
strsplit(Description[,1], "#")
str(Description)
str(strsplit(Description[,1], "#"))
strsplit(Description[,1], "#")[[]][2]
strsplit(Description[,1], "#")[[1]]
strsplit(Description[,1], "#")[[1]] [2]
strsplit(Description[,1], "#")[[1,2]]
strsplit(Description[,1], "#")[[]]
sapply(strsplit(Description[,1], "#"), "[" , 2)
vegprmt.tbl$Description<-sapply(strsplit(Description[,1], "#"), "[" , 2)
vegprmt.tbl
Description<-read.table("./vegprmt.tbl", skip=2, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2]+1, comment.char="") ;
vegprmt.tbl$Description<-sapply(strsplit(Description[,1], "#"), "[" , 2)
Description<-read.table("./vegprmt.tbl", skip=2, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2]+1, comment.char="") ;
Description
Description<-read.table("./vegprmt.tbl", skip=2, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2]-1, comment.char="") ;
vegprmt.tbl$Description<-sapply(strsplit(Description[,1], "#"), "[" , 2)
Description
vegprmt.tbl$Description<-sapply(strsplit(Description[,1], "#"), "[" , 2)
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2]) ;
Description<-read.table("./vegprmt.tbl", skip=2, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2], comment.char="") ;
vegprmt.tbl$Description<-sapply(strsplit(Description[,1], "#"), "[" , 2)
vegprmt.tbl
Description<-read.table("./vegprmt.tbl", skip=1, sep="\t", as.is=T, header=T, nrows=NUMLC[1,2], comment.char="") ;
vegprmt.tbl$Description<-sapply(strsplit(Description[,1], "#"), "[" , 2)
vegprmt.tbl
vegprmt.tbl<-read.table("./vegprmt.tbl", skip=1, sep="", as.is=T, header=T, nrows=NUMLC[1,2]+6) ;
Otherprmt.tbl<-read.table("./vegprmt.tbl", skip=NUMLC[1,2]+2, sep="", as.is=T, header=F, nrows=5) ;
Otherprmt.tbl
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+7, sep="", as.is=T, header=F) ;
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+9, sep="", as.is=T, header=F,comment.char="") ;
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+9, sep="->", as.is=T, header=F,comment.char="") ;
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+9, sep=">", as.is=T, header=F,comment.char="") ;
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+9,  as.is=T, header=F,comment.char="") ;
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+12,  as.is=T, header=F,comment.char="") ;
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+12, sep= ">" , as.is=T, header=F,comment.char="") ;
read.table("./vegprmt.tbl", skip=NUMLC[1,2]+10, sep= ">" , as.is=T, header=F,comment.char="") ;
NLCD.lc<-read.table("./vegprmt.tbl", skip=NUMLC[1,2]+10, sep= ">" , as.is=T, header=F,comment.char="") ;
str(NLCD.lc)
PIHM.lc<-NLCD.lc[,2];
PIHM.lc
NLCD_PIHM.lc<-read.table("./vegprmt.tbl", skip=NUMLC[1,2]+10, sep= ">" , as.is=T, header=F,comment.char="") ;
PIHM.lc<-NLCD_PIHM.lc[,2];
PIHM.lc
noquote(strsplit("A text I want to display with spaces", NULL)[[1]])
sapply(strsplit(NLCD_PIHM.lc[,1], split = "\t "))
strsplit(NLCD_PIHM.lc[,1], split = "\t ")
strsplit(NLCD_PIHM.lc[,1], split = " ")
sapply(strsplit(NLCD_PIHM.lc[,1], split = " "), "[" , 2) ;
NLCD.lc<-as.numeric(sapply(strsplit(NLCD_PIHM.lc[,1], split = " "), "[" , 2)) ;
str(NLCD.lc)
str(PIHM.lc)
NLCD.lc<-as.integer(sapply(strsplit(NLCD_PIHM.lc[,1], split = " "), "[" , 2)) ;
str(NLCD.lc)
str(PIHM.lc)
NLCD_to_PIHM<-PIHM.lc
NLCD_to_PIHM<
NLCD_to_PIHM
NLCD_to_PIHM<-data.frame(PIHM.lc,NLCD.lc) ;
NLCD_to_PIHM
NLCD_to_PIHM<-data.frame(NLCD.lc, PIHM.lc) ;
vegprmt.tb
vegprmt.tbl
NLCD_to_PIHM<-merge(data.frame(NLCD.lc, PIHM.lc), vegprmt.tbl, by.x= "PIHM.lc", by.y= "INDEX", all=T)
NLCD_to_PIHM
data.frame(NLCD.lc, PIHM.lc)
NLCD_to_PIHM<-merge(data.frame(NLCD.lc, PIHM.lc), vegprmt.tbl, by.x= "PIHM.lc", by.y= "INDEX", all=T) ;
NLCD_to_PIHM
